{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":".search-results { display: none; }","title":"Home"},{"location":"about/","text":"Que es esto? Libreta virtual de EMAS \u00c9ste sitio web contiene gran parte de la documentaci\u00f3n de EMAS. Donde se encuentra esto? Las p\u00e1ginas disponibles aqu\u00ed estan en un repositorio de GitHub servido al p\u00fablico a trav\u00e9s del servicio de GitHub Pages , con la gesti\u00f3n de dominio de Cloudflare . M\u00e1s informaci\u00f3n de ello en la secci\u00f3n de Cloudflare . .search-results { display: none; }","title":"Que es esto?"},{"location":"about/#que-es-esto","text":"","title":"Que es esto?"},{"location":"about/#libreta-virtual-de-emas","text":"\u00c9ste sitio web contiene gran parte de la documentaci\u00f3n de EMAS.","title":"Libreta virtual de EMAS"},{"location":"about/#donde-se-encuentra-esto","text":"Las p\u00e1ginas disponibles aqu\u00ed estan en un repositorio de GitHub servido al p\u00fablico a trav\u00e9s del servicio de GitHub Pages , con la gesti\u00f3n de dominio de Cloudflare . M\u00e1s informaci\u00f3n de ello en la secci\u00f3n de Cloudflare . .search-results { display: none; }","title":"Donde se encuentra esto?"},{"location":"cloudflare/","text":"Que es Cloudflare? Cloudflare es una empresa de servicios de red que ofrece una gama de soluciones para mejorar el rendimiento y la seguridad de los sitios web, incluyendo CDN (Content Delivery Network) , protecci\u00f3n contra ataques DDoS y firewall de aplicaciones web (WAF) . Su plataforma ayuda a optimizar la entrega de contenido y proteger las aplicaciones en l\u00ednea contra amenazas comunes en internet. Como utiliza EMAS Cloudflare? Actualmente la gesti\u00f3n de dominios principal se hace a trav\u00e9s de el propio registrador o la m\u00e1quina principal de Plesk activa en EMAS. El dominio base gestionado por nuesto Cloudflare es emas-solutions.es con el cual se montan la mayor\u00eda de T\u00faneles o subdominios . Para usar un t\u00fanel son necesarios un dominio y una maquina destino, generalmente el dominio ya est\u00e1 listo y configurado en Cloudflare as\u00ed que no mostrare como hacer su configuraci\u00f3n en este documento. .search-results { display: none; }","title":"Que es Cloudflare?"},{"location":"cloudflare/#que-es-cloudflare","text":"Cloudflare es una empresa de servicios de red que ofrece una gama de soluciones para mejorar el rendimiento y la seguridad de los sitios web, incluyendo CDN (Content Delivery Network) , protecci\u00f3n contra ataques DDoS y firewall de aplicaciones web (WAF) . Su plataforma ayuda a optimizar la entrega de contenido y proteger las aplicaciones en l\u00ednea contra amenazas comunes en internet.","title":"Que es Cloudflare?"},{"location":"cloudflare/#como-utiliza-emas-cloudflare","text":"Actualmente la gesti\u00f3n de dominios principal se hace a trav\u00e9s de el propio registrador o la m\u00e1quina principal de Plesk activa en EMAS. El dominio base gestionado por nuesto Cloudflare es emas-solutions.es con el cual se montan la mayor\u00eda de T\u00faneles o subdominios . Para usar un t\u00fanel son necesarios un dominio y una maquina destino, generalmente el dominio ya est\u00e1 listo y configurado en Cloudflare as\u00ed que no mostrare como hacer su configuraci\u00f3n en este documento. .search-results { display: none; }","title":"Como utiliza EMAS Cloudflare?"},{"location":"cloudflare/ssl_odoo/","text":"SSL Odoo + Cloudflare Proceso SSL Odoo Cloudflare 1. Montado odoo16002 via Odoofy. $root : /usr/bin/odoofy build odoo.json 2. Montado tunnel cloudflare en maquina para direccionar 16002.xxx.es \u279d 127.0.0.1:16002 3. Instalar nginx sudo apt -y install nginx sudo nano /etc/nginx/sites-enabled/16002.___.es 4. Nginx odoo proxy config sudo nginx -t (Test config) systemctl restart nginx 5. Odoo cert creation sudo openssl genpkey -algorithm RSA -out /etc/ssl/private/odoo_cert_key.key -aes256 Odoo$443! sudo openssl req -new -key /etc/ssl/private/odoo_cert_key.key -out /etc/ssl/certs/odoo_cert.csr openssl x509 -req -days 365 -in /etc/ssl/certs/odoo_cert.csr -signkey /etc/ssl/private/odoo_cert_key.key -out /etc/ssl/certs/certificate.crt sudo openssl rsa -in /etc/ssl/private/odoo_cert_key.key -out /etc/ssl/private/odoo_cert_pub.key Nginx odoo proxy config upstream odoo16 { server 127.0.0.1:16002; } upstream odoochat { server 127.0.0.1:16002; } server { listen 80; server_name 16002.___.es; return 301 https://$host$request_uri; } server { listen 443 ssl; server_name 16002.___.es; ssl_certificate /etc/ssl/certs/certificate.crt; ssl_certificate_key /etc/ssl/private/odoo_cert_key.key; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSAAES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384'; access_log /var/log/nginx/odoo.access.log; error_log /var/log/nginx/odoo.error.log; proxy_buffers 16 64k; proxy_buffer_size 128k; location / { proxy_pass http://odoo16; proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto https; } location /longpolling { proxy_pass http://odoochat; } location ~* /web/static/ { proxy_cache_valid 200 60m; proxy_buffering on; expires 864000; proxy_pass http://odoo16; } } .search-results { display: none; }","title":"SSL Odoo + Cloudflare"},{"location":"cloudflare/ssl_odoo/#ssl-odoo-cloudflare","text":"Proceso SSL Odoo Cloudflare 1. Montado odoo16002 via Odoofy. $root : /usr/bin/odoofy build odoo.json 2. Montado tunnel cloudflare en maquina para direccionar 16002.xxx.es \u279d 127.0.0.1:16002 3. Instalar nginx sudo apt -y install nginx sudo nano /etc/nginx/sites-enabled/16002.___.es 4. Nginx odoo proxy config sudo nginx -t (Test config) systemctl restart nginx 5. Odoo cert creation sudo openssl genpkey -algorithm RSA -out /etc/ssl/private/odoo_cert_key.key -aes256 Odoo$443! sudo openssl req -new -key /etc/ssl/private/odoo_cert_key.key -out /etc/ssl/certs/odoo_cert.csr openssl x509 -req -days 365 -in /etc/ssl/certs/odoo_cert.csr -signkey /etc/ssl/private/odoo_cert_key.key -out /etc/ssl/certs/certificate.crt sudo openssl rsa -in /etc/ssl/private/odoo_cert_key.key -out /etc/ssl/private/odoo_cert_pub.key","title":"SSL Odoo + Cloudflare"},{"location":"cloudflare/ssl_odoo/#nginx-odoo-proxy-config","text":"upstream odoo16 { server 127.0.0.1:16002; } upstream odoochat { server 127.0.0.1:16002; } server { listen 80; server_name 16002.___.es; return 301 https://$host$request_uri; } server { listen 443 ssl; server_name 16002.___.es; ssl_certificate /etc/ssl/certs/certificate.crt; ssl_certificate_key /etc/ssl/private/odoo_cert_key.key; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSAAES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384'; access_log /var/log/nginx/odoo.access.log; error_log /var/log/nginx/odoo.error.log; proxy_buffers 16 64k; proxy_buffer_size 128k; location / { proxy_pass http://odoo16; proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto https; } location /longpolling { proxy_pass http://odoochat; } location ~* /web/static/ { proxy_cache_valid 200 60m; proxy_buffering on; expires 864000; proxy_pass http://odoo16; } } .search-results { display: none; }","title":"Nginx odoo proxy config"},{"location":"cloudflare/tuneles/","text":"Que es un t\u00fanel? Un t\u00fanel de Cloudflare es una conexi\u00f3n segura que permite enrutar el tr\u00e1fico de un servidor web a trav\u00e9s del domino especificado. Esto proporciona beneficios como mejoras en la seguridad, el rendimiento y la disponibilidad del sitio web de manera segura y extremadamente sencilla. Quiero un nuevo subdominio disponible, como creo el t\u00fanel? \u00c9s posible que no necesites crear un t\u00fanel; cada m\u00e1quina o servidor que tenga servicios a publicar solo necesita un solo t\u00fanel ( o ninguno* ), ya que \u00e9ste va a crear nuestra salida de la maquina hacia la gesti\u00f3n de Cloudflare, desde la que se har\u00e1 la configuraci\u00f3n de todos servicios y dominios existentes. Quiero crear solo un subdominio La m\u00e1quina tiene un t\u00fanel Es posible que la m\u00e1quina en la que se pretende instalar el acceso Cloudflare ya disponga de un t\u00fanel instalado. Si tenemos acceso SSH a la m\u00e1quina podemos comprobar la existencia de t\u00faneles en \u00e9sta: cloudflared tunnel list En caso de que de que no haya t\u00faneles o no exista cloudflared podemos proceder igual ya que la m\u00e1quina est\u00e1 limpia. Creaci\u00f3n de un t\u00fanel (Zero Trust) Cuando sabemos que una maquina no tiene t\u00faneles el proceso de montaje de uno es muy sencillo: Debemos ir al apartado de Zero Trust \u2192 Tunnels de la p\u00e1gina Dashboard de Cloudflare . Una vez aqu\u00ed vamos a ver listados todos los t\u00faneles existentes enlazados a nuestra cuenta. La p\u00e1gina muestra una lista de t\u00faneles con: El nombre del t\u00fanel La URL o Direcci\u00f3n desde la que se accede al t\u00fanel Su estado (Funcional o No) Para crear un t\u00fanel en una m\u00e1quina en la que no exista ninguno le podemos dar a crear y copiar el script de instalado (seleccionar sistema operativo primero) , \u00e9sto va a hacer el montaje solo; en cuanto finalize podremos ver el estado conectado al final de \u00e9sta p\u00e1gina. Annexo T\u00fanel maestro Proximamente... .search-results { display: none; }","title":"Que es un t\u00fanel?"},{"location":"cloudflare/tuneles/#que-es-un-tunel","text":"Un t\u00fanel de Cloudflare es una conexi\u00f3n segura que permite enrutar el tr\u00e1fico de un servidor web a trav\u00e9s del domino especificado. Esto proporciona beneficios como mejoras en la seguridad, el rendimiento y la disponibilidad del sitio web de manera segura y extremadamente sencilla.","title":"Que es un t\u00fanel?"},{"location":"cloudflare/tuneles/#quiero-un-nuevo-subdominio-disponible-como-creo-el-tunel","text":"\u00c9s posible que no necesites crear un t\u00fanel; cada m\u00e1quina o servidor que tenga servicios a publicar solo necesita un solo t\u00fanel ( o ninguno* ), ya que \u00e9ste va a crear nuestra salida de la maquina hacia la gesti\u00f3n de Cloudflare, desde la que se har\u00e1 la configuraci\u00f3n de todos servicios y dominios existentes.","title":"Quiero un nuevo subdominio disponible, como creo el t\u00fanel?"},{"location":"cloudflare/tuneles/#quiero-crear-solo-un-subdominio","text":"","title":"Quiero crear solo un subdominio"},{"location":"cloudflare/tuneles/#creacion-de-un-tunel-zero-trust","text":"Cuando sabemos que una maquina no tiene t\u00faneles el proceso de montaje de uno es muy sencillo: Debemos ir al apartado de Zero Trust \u2192 Tunnels de la p\u00e1gina Dashboard de Cloudflare . Una vez aqu\u00ed vamos a ver listados todos los t\u00faneles existentes enlazados a nuestra cuenta. La p\u00e1gina muestra una lista de t\u00faneles con: El nombre del t\u00fanel La URL o Direcci\u00f3n desde la que se accede al t\u00fanel Su estado (Funcional o No) Para crear un t\u00fanel en una m\u00e1quina en la que no exista ninguno le podemos dar a crear y copiar el script de instalado (seleccionar sistema operativo primero) , \u00e9sto va a hacer el montaje solo; en cuanto finalize podremos ver el estado conectado al final de \u00e9sta p\u00e1gina.","title":"Creaci\u00f3n de un t\u00fanel (Zero Trust)"},{"location":"cloudflare/tuneles/#annexo","text":"","title":"Annexo"},{"location":"cloudflare/tuneles/#tunel-maestro","text":"Proximamente... .search-results { display: none; }","title":"T\u00fanel maestro"},{"location":"cloudflare/tuneles/basic_config/","text":"Crear subdominio Tiene un tunel la maquina servidor? Debemos ir al apartado de Zero Trust \u2192 Tunnels de la p\u00e1gina Dashboard de Cloudflare . Una vez aqu\u00ed vamos a ver listados todos los t\u00faneles existentes enlazados a nuestra cuenta. La p\u00e1gina muestra una lista de t\u00faneles con: El nombre del t\u00fanel La URL o Direcci\u00f3n desde la que se accede al t\u00fanel Su estado (Funcional o No) Si le damos a configurar un tunel (sabiendo a que maquina se dirige \u00e9ste) , podemos ver, modificar y crear los subdominios que deseemos. Configuraci\u00f3n: En la secci\u00f3n de Public Hostname vamos a configurar como se relaciona el dominio de acceso con el puerto e IP de la m\u00e1quina destino. Si le damos click a nuevo vamos a ver la siguiente configuraci\u00f3n: Aqu\u00ed hay 2 partes a tener en cuenta. Dominio En las primeras 3 cajas vamos a determinar la configuraci\u00f3n de dominio. Imaginemos en este caso que el dominio desde el que queremos acceder al servicio que servira este tunel es tutorial_cloudflare.emas-solutions.es. tutorial_cloudflare va a ser el subdominio y deber\u00eda ser diferente para cada servicio emas_solutions.es es nuestro dominio, que deber\u00e1 seleccionarse de los dominios existentes La parte de PATH la dejaremos vac\u00eda ya que normalmente se usa para sub- servicios. Servicio En la parte de abajo habr\u00e1 la configuraci\u00f3n que sirve para conectar con el servicio deseado en la m\u00e1quina destino (servidor). En este ejemplo vamos a servir una app simple en la misma m\u00e1quina que expone el puerto 12345. Generalmente los servicios en local se acceden por HTTP, as\u00ed que eso es lo que pondremos: Resumen La configuraci\u00f3n explicada consigue que desde el dominio tutorial_cloudflare.emas_solutions.es podamos acceder al servicio que se ejecuta en la m\u00e1quina por el puerto 12345 como si estuvi\u00e9ramos en esta. Servido desde HTTPS por supuesto. Entonces si desde la maquina ejecutamos localhost:12345 deberemos ver lo mismo que visitando el dominio especificado. Annexos Normalmente las conexiones de los t\u00faneles son de HTTP a HTTPS, siendo as\u00ed solo encriptadas desde Cloudflare al p\u00fablico: Si bien esto facilita mucho las cosas al no requerir ninguna configuraci\u00f3n ni montaje relacionada con los certificados; puede llegar a provocar alg\u00fan problema al tratar con servicios y conexiones m\u00e1s complejas como la integraci\u00f3n de Outlook mail de Microsoft. Entonces en alg\u00fan caso se encripta con certificado la conexi\u00f3n a dos bandas: .search-results { display: none; }","title":"Crear subdominio"},{"location":"cloudflare/tuneles/basic_config/#crear-subdominio","text":"","title":"Crear subdominio"},{"location":"cloudflare/tuneles/basic_config/#tiene-un-tunel-la-maquina-servidor","text":"Debemos ir al apartado de Zero Trust \u2192 Tunnels de la p\u00e1gina Dashboard de Cloudflare . Una vez aqu\u00ed vamos a ver listados todos los t\u00faneles existentes enlazados a nuestra cuenta. La p\u00e1gina muestra una lista de t\u00faneles con: El nombre del t\u00fanel La URL o Direcci\u00f3n desde la que se accede al t\u00fanel Su estado (Funcional o No) Si le damos a configurar un tunel (sabiendo a que maquina se dirige \u00e9ste) , podemos ver, modificar y crear los subdominios que deseemos. Configuraci\u00f3n: En la secci\u00f3n de Public Hostname vamos a configurar como se relaciona el dominio de acceso con el puerto e IP de la m\u00e1quina destino. Si le damos click a nuevo vamos a ver la siguiente configuraci\u00f3n: Aqu\u00ed hay 2 partes a tener en cuenta.","title":"Tiene un tunel la maquina servidor?"},{"location":"cloudflare/tuneles/basic_config/#dominio","text":"En las primeras 3 cajas vamos a determinar la configuraci\u00f3n de dominio. Imaginemos en este caso que el dominio desde el que queremos acceder al servicio que servira este tunel es tutorial_cloudflare.emas-solutions.es. tutorial_cloudflare va a ser el subdominio y deber\u00eda ser diferente para cada servicio emas_solutions.es es nuestro dominio, que deber\u00e1 seleccionarse de los dominios existentes La parte de PATH la dejaremos vac\u00eda ya que normalmente se usa para sub- servicios.","title":"Dominio"},{"location":"cloudflare/tuneles/basic_config/#servicio","text":"En la parte de abajo habr\u00e1 la configuraci\u00f3n que sirve para conectar con el servicio deseado en la m\u00e1quina destino (servidor). En este ejemplo vamos a servir una app simple en la misma m\u00e1quina que expone el puerto 12345. Generalmente los servicios en local se acceden por HTTP, as\u00ed que eso es lo que pondremos:","title":"Servicio"},{"location":"cloudflare/tuneles/basic_config/#resumen","text":"La configuraci\u00f3n explicada consigue que desde el dominio tutorial_cloudflare.emas_solutions.es podamos acceder al servicio que se ejecuta en la m\u00e1quina por el puerto 12345 como si estuvi\u00e9ramos en esta. Servido desde HTTPS por supuesto. Entonces si desde la maquina ejecutamos localhost:12345 deberemos ver lo mismo que visitando el dominio especificado.","title":"Resumen"},{"location":"cloudflare/tuneles/basic_config/#annexos","text":"Normalmente las conexiones de los t\u00faneles son de HTTP a HTTPS, siendo as\u00ed solo encriptadas desde Cloudflare al p\u00fablico: Si bien esto facilita mucho las cosas al no requerir ninguna configuraci\u00f3n ni montaje relacionada con los certificados; puede llegar a provocar alg\u00fan problema al tratar con servicios y conexiones m\u00e1s complejas como la integraci\u00f3n de Outlook mail de Microsoft. Entonces en alg\u00fan caso se encripta con certificado la conexi\u00f3n a dos bandas: .search-results { display: none; }","title":"Annexos"},{"location":"emas/estructura/","text":"Estructura de EMAS .search-results { display: none; }","title":"Estructura de EMAS"},{"location":"emas/estructura/#estructura-de-emas","text":".search-results { display: none; }","title":"Estructura de EMAS"},{"location":"odoo/backups/","text":"Setup mount para remote backups Actualmente el script de backups envia los archivos a la carpeta /mnt/backups . Esta carpeta es un mount del servidor de backups (sincronizaci\u00f3n de archivos). Para hacer el montaje seguimos los siguientes pasos: sudo nano /etc/fstab Editamos el archivo fstab . Inserimos la siguiente l\u00ednea: //<IP>/BAK/<RUTA> /mnt/backups cifs vers=1.0,iocharset=utf8,file_mode=0777,dir_mode=0777,noperm,credentials=<RUTA CREDENCIALES> 0 0 IP : Es la direcci\u00f3n IP del servidor de backups. Ej. 192.168.1.5 RUTA : Es la ruta en el servidor de backups donde se guardaran los archivos. Ej. emas/88-Proyectos/Backups RUTA CREDENCIALES : Es la ruta del archivo de credenciales. Ej. /home/emas/.backup-credentials Creamos el archivo .backup-credentials en la ra\u00edz del usuario. I ponemos los credenciales del servidor de backup: domain=EMASIT username=Developer password=D3v3#2021 Aseguramos que la utilidad cifs esta instalada sudo apt install cifs-utils . Montamos los drives con sudo mount -a . Gesti\u00f3n errores Dependiendo del sistema operativo del servidor de backups, es posible que tengamos que cambiar el protocolo de montaje. Si el servidor de backups no es Windows, es posible que tengamos que cambiar vers=1.0 por vers=3.0 . (Tambi\u00e9n m\u00e1s seguro) . Para comprobar la connexi\u00f3n a una carpeta compartida podemos utilizar el comando: smbclient -L //<IP>/BAK -U <(DOMINIO)/USUARIO> . Aqu\u00ed podemos comprobar si el servidor es accesible y si los credenciales son correctos. El dominio es opcional y solo necessario en Windows . Tarea programada Con el comando: crontab -e ; podemos modificar el archivo de tareas automaticas. A\u00f1adir la siguiente linia: 0 12 * * * <ruta-al-proyecto>/backup_script.sh Cada l\u00ednia de este archivo a\u00f1ade una tarea que se ejecuta autom\u00e1ticamente en el tiempo que se le ha asignado. .--------------- minuto (0-59) | .------------ hora (0-23) | | .--------- d\u00eda del mes (1-31) | | | .------ mes (1-12) o jan,feb,mar,apr,may,jun,jul... (meses en ingl\u00e9s) | | | | .--- d\u00eda de la semana (0-6) (domingo=0 o 7) | | | | | * * * * * comando a ejecutar Script de backup #!/bin/bash # Set variables backup_dir=\"/mnt/backups\" date_suffix=$(date +%Y%m%d%H%M%S) declare -A projects # Configure projects: project_name=\"master_pwd dbname backup_format\" projects[Comatec-02]=\"odoo/17 odoo17 odoo17002 17002\" projects[Emas-01]=\"odoo/16 admin odoo16101 16101\" # Ensure the backup directory exists and backup the databases for project in \"${!projects[@]}\"; do IFS=' ' read -r -a config <<< \"${projects[$project]}\" sub_path=${config[0]} master_pwd=${config[1]} dbname=${config[2]} port=${config[3]} main_path=\"$backup_dir/$sub_path/$project\" mkdir -p $main_path curl -X POST -F \"master_pwd=$master_pwd\" -F \"name=$dbname\" -F \"backup_format=$backup_format\" -o \"$main_path/$date_suffix.zip\" \"http://192.168.1.208:$port/web/database/backup\" ls -dt \"$main_path/\"* | tail -n +15 | xargs rm -rf done En ruta, ponemos la ruta de la carpeta que CONTIENE la base de datos. En nombre, ponemos el nombre del proyecto (podemos poner subcarpetas para organizar mejor los backups EJ. /proyecto/nombre_fecha ). .search-results { display: none; }","title":"Backups"},{"location":"odoo/backups/#setup-mount-para-remote-backups","text":"Actualmente el script de backups envia los archivos a la carpeta /mnt/backups . Esta carpeta es un mount del servidor de backups (sincronizaci\u00f3n de archivos). Para hacer el montaje seguimos los siguientes pasos: sudo nano /etc/fstab Editamos el archivo fstab . Inserimos la siguiente l\u00ednea: //<IP>/BAK/<RUTA> /mnt/backups cifs vers=1.0,iocharset=utf8,file_mode=0777,dir_mode=0777,noperm,credentials=<RUTA CREDENCIALES> 0 0 IP : Es la direcci\u00f3n IP del servidor de backups. Ej. 192.168.1.5 RUTA : Es la ruta en el servidor de backups donde se guardaran los archivos. Ej. emas/88-Proyectos/Backups RUTA CREDENCIALES : Es la ruta del archivo de credenciales. Ej. /home/emas/.backup-credentials Creamos el archivo .backup-credentials en la ra\u00edz del usuario. I ponemos los credenciales del servidor de backup: domain=EMASIT username=Developer password=D3v3#2021 Aseguramos que la utilidad cifs esta instalada sudo apt install cifs-utils . Montamos los drives con sudo mount -a .","title":"Setup mount para remote backups"},{"location":"odoo/backups/#gestion-errores","text":"Dependiendo del sistema operativo del servidor de backups, es posible que tengamos que cambiar el protocolo de montaje. Si el servidor de backups no es Windows, es posible que tengamos que cambiar vers=1.0 por vers=3.0 . (Tambi\u00e9n m\u00e1s seguro) . Para comprobar la connexi\u00f3n a una carpeta compartida podemos utilizar el comando: smbclient -L //<IP>/BAK -U <(DOMINIO)/USUARIO> . Aqu\u00ed podemos comprobar si el servidor es accesible y si los credenciales son correctos. El dominio es opcional y solo necessario en Windows .","title":"Gesti\u00f3n errores"},{"location":"odoo/backups/#tarea-programada","text":"Con el comando: crontab -e ; podemos modificar el archivo de tareas automaticas. A\u00f1adir la siguiente linia: 0 12 * * * <ruta-al-proyecto>/backup_script.sh Cada l\u00ednia de este archivo a\u00f1ade una tarea que se ejecuta autom\u00e1ticamente en el tiempo que se le ha asignado. .--------------- minuto (0-59) | .------------ hora (0-23) | | .--------- d\u00eda del mes (1-31) | | | .------ mes (1-12) o jan,feb,mar,apr,may,jun,jul... (meses en ingl\u00e9s) | | | | .--- d\u00eda de la semana (0-6) (domingo=0 o 7) | | | | | * * * * * comando a ejecutar","title":"Tarea programada"},{"location":"odoo/backups/#script-de-backup","text":"#!/bin/bash # Set variables backup_dir=\"/mnt/backups\" date_suffix=$(date +%Y%m%d%H%M%S) declare -A projects # Configure projects: project_name=\"master_pwd dbname backup_format\" projects[Comatec-02]=\"odoo/17 odoo17 odoo17002 17002\" projects[Emas-01]=\"odoo/16 admin odoo16101 16101\" # Ensure the backup directory exists and backup the databases for project in \"${!projects[@]}\"; do IFS=' ' read -r -a config <<< \"${projects[$project]}\" sub_path=${config[0]} master_pwd=${config[1]} dbname=${config[2]} port=${config[3]} main_path=\"$backup_dir/$sub_path/$project\" mkdir -p $main_path curl -X POST -F \"master_pwd=$master_pwd\" -F \"name=$dbname\" -F \"backup_format=$backup_format\" -o \"$main_path/$date_suffix.zip\" \"http://192.168.1.208:$port/web/database/backup\" ls -dt \"$main_path/\"* | tail -n +15 | xargs rm -rf done En ruta, ponemos la ruta de la carpeta que CONTIENE la base de datos. En nombre, ponemos el nombre del proyecto (podemos poner subcarpetas para organizar mejor los backups EJ. /proyecto/nombre_fecha ). .search-results { display: none; }","title":"Script de backup"},{"location":"odoo/odoofy/","text":"Gu\u00eda b\u00e1sica de Odoofy La herramienta Odoofy permite crear un entorno de desarrollo para Odoo en una m\u00e1quina UNIX (Linux o MACOS, de momento no soporta Windows aunque puede instalarse en WSL). El ejecutable de Odoofy se puede descargar desde el siguiente enlace: Descargar Odoofy . Funcionamiento de Odoofy Odoofy consta de dos partes: la funci\u00f3n de servidor web para ejecutar comandos desde la p\u00e1gina https://odoofy.emas-solutions.es y la funci\u00f3n build que permite crear un entorno de desarrollo de Odoo. La pagina web de odoofy montara las instancias Odoo en la maquina en la que este preparada. Una vez se monte la instancia, se podra acceder a ella desde la ip de la m\u00e1quina y el puerto que se haya configurado. En estos momentos (11-01-2024) la web de odoofy esta en (192.168.1.207) desde la red de EMAS. Utilizaremos la funci\u00f3n build para el montaje r\u00e1pido de entornos, ya que montar un servidor web requiere de una configuraci\u00f3n m\u00e1s compleja. Funci\u00f3n build Una vez que se ha descargado el programa Odoofy en una m\u00e1quina, se puede ejecutar directamente: ./odoofy -h Esto mostrar\u00e1 informaci\u00f3n sobre la herramienta (esto asume que odoofy se encuentra en la misma carpeta en la que estamos). Si ejecutamos ./odoofy build directamente, montar\u00e1 un entorno de desarrollo de Odoo en la m\u00e1quina en la que estamos, con la versi\u00f3n de Odoo 16 y el nombre/puerto 16000 (11/01/2024) . Luego podemos acceder con localhost:16000 o ip:16000 si estamos en remoto, desde el navegador. Para cambiar la versi\u00f3n o configuraci\u00f3n de Odoo a montar, se puede utilizar un archivo como par\u00e1metro. Por ejemplo: ./odoofy build configuracion.json . Un ejemplo de la estrucura del archivo de configuraci\u00f3n es el siguiente: { \"version\": \"17\", \"nombre_proyecto\": \"01\", \"nombre_servidor\": \"localhost\", \"idiomas\": [ \"es_ES\", \"en_US\" ], \"enterprise\": true, \"developer_mode\": true, \"modules\": [ \"mail\" ], \"preprod\": false, } Todos los par\u00e1metros son obligatorios, el orden no importa, pero el nombre de los par\u00e1metros s\u00ed, ya que son los que utiliza Odoofy para montar el entorno. Cosas a tener en cuenta La versi\u00f3n y el nombre del proyecto siempre deben tener 2 d\u00edgitos, por ejemplo: 16 y 02 , ya que Odoofy utiliza estos valores para elegir el puerto a utilizar. enterprise: true solo modificar\u00e1 el puerto y nombre de la base de datos, por ejemplo, de 16002 a 16102 . Actualmente, si en la m\u00e1quina no existe ning\u00fan proyecto enterprise, este no ser\u00e1 de tipo enterprise. El modo desarrollador llena la base de datos con datos de prueba. preprod: true no afecta a Odoo directamente, sino que elige puertos alternativos como 16202 para normal y 16302 para enterprise. Finalmente, los m\u00f3dulos son los que se instalar\u00e1n en el entorno. En la lista de modules , estos deben tener el nombre exacto que se muestra en su informaci\u00f3n. La funci\u00f3n no ha sido completamente probada con m\u00f3dulos de terceros y se recomienda esperar a instalarlos manualmente (mail viene por defecto). Notas Estructura de carpetas de Odoofy: /opt/odoo16/ \u251c\u2500\u2500 addons \u251c\u2500\u2500 framework \u251c\u2500\u2500 projects \u2502 \u251c\u2500\u2500 01 \u2502 \u251c\u2500\u2500 enterprise.conf \u2502 \u251c\u2500\u2500 enterprise.log \u2502 \u251c\u2500\u2500 enterprise.service \u2502 \u251c\u2500\u2500 odoo.conf \u2502 \u251c\u2500\u2500 odoo.log \u2502 \u251c\u2500\u2500 odoo.service \u2502 \u251c\u2500\u2500 addons \u2502 \u2502 \u251c\u2500\u2500 community \u2502 \u2502 \u251c\u2500\u2500 custom \u2502 \u2502 \u251c\u2500\u2500 private \u2502 \u2502 \u2514\u2500\u2500 public \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 geoip \u2502 \u2502 \u251c\u2500\u2500 screencasts \u2502 \u2502 \u2514\u2500\u2500 screenshots \u2502 \u2514\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 enterprise \u2502 \u2514\u2500\u2500 odoo \u2514\u2500\u2500 venv Desglose de los puertos utilizados por Odoofy: 16022 16 = Versi\u00f3n de Odoo 0 = No es enterprise ni preproducci\u00f3n 22 = N\u00famero de proyecto Tabla de puertos utilizados por Odoofy: Versi\u00f3n Enterprise Preproducci\u00f3n Puertos (web - data) 16 No No 16000 - 16500 16 S\u00ed No 16100 - 16600 16 No S\u00ed 16200 - 16700 16 S\u00ed S\u00ed 16302 - 16800 .search-results { display: none; }","title":"Gu\u00eda b\u00e1sica de Odoofy"},{"location":"odoo/odoofy/#guia-basica-de-odoofy","text":"La herramienta Odoofy permite crear un entorno de desarrollo para Odoo en una m\u00e1quina UNIX (Linux o MACOS, de momento no soporta Windows aunque puede instalarse en WSL). El ejecutable de Odoofy se puede descargar desde el siguiente enlace: Descargar Odoofy .","title":"Gu\u00eda b\u00e1sica de Odoofy"},{"location":"odoo/odoofy/#funcionamiento-de-odoofy","text":"Odoofy consta de dos partes: la funci\u00f3n de servidor web para ejecutar comandos desde la p\u00e1gina https://odoofy.emas-solutions.es y la funci\u00f3n build que permite crear un entorno de desarrollo de Odoo. La pagina web de odoofy montara las instancias Odoo en la maquina en la que este preparada. Una vez se monte la instancia, se podra acceder a ella desde la ip de la m\u00e1quina y el puerto que se haya configurado. En estos momentos (11-01-2024) la web de odoofy esta en (192.168.1.207) desde la red de EMAS. Utilizaremos la funci\u00f3n build para el montaje r\u00e1pido de entornos, ya que montar un servidor web requiere de una configuraci\u00f3n m\u00e1s compleja.","title":"Funcionamiento de Odoofy"},{"location":"odoo/odoofy/#funcion-build","text":"Una vez que se ha descargado el programa Odoofy en una m\u00e1quina, se puede ejecutar directamente: ./odoofy -h Esto mostrar\u00e1 informaci\u00f3n sobre la herramienta (esto asume que odoofy se encuentra en la misma carpeta en la que estamos). Si ejecutamos ./odoofy build directamente, montar\u00e1 un entorno de desarrollo de Odoo en la m\u00e1quina en la que estamos, con la versi\u00f3n de Odoo 16 y el nombre/puerto 16000 (11/01/2024) . Luego podemos acceder con localhost:16000 o ip:16000 si estamos en remoto, desde el navegador. Para cambiar la versi\u00f3n o configuraci\u00f3n de Odoo a montar, se puede utilizar un archivo como par\u00e1metro. Por ejemplo: ./odoofy build configuracion.json . Un ejemplo de la estrucura del archivo de configuraci\u00f3n es el siguiente: { \"version\": \"17\", \"nombre_proyecto\": \"01\", \"nombre_servidor\": \"localhost\", \"idiomas\": [ \"es_ES\", \"en_US\" ], \"enterprise\": true, \"developer_mode\": true, \"modules\": [ \"mail\" ], \"preprod\": false, } Todos los par\u00e1metros son obligatorios, el orden no importa, pero el nombre de los par\u00e1metros s\u00ed, ya que son los que utiliza Odoofy para montar el entorno.","title":"Funci\u00f3n build"},{"location":"odoo/odoofy/#cosas-a-tener-en-cuenta","text":"La versi\u00f3n y el nombre del proyecto siempre deben tener 2 d\u00edgitos, por ejemplo: 16 y 02 , ya que Odoofy utiliza estos valores para elegir el puerto a utilizar. enterprise: true solo modificar\u00e1 el puerto y nombre de la base de datos, por ejemplo, de 16002 a 16102 . Actualmente, si en la m\u00e1quina no existe ning\u00fan proyecto enterprise, este no ser\u00e1 de tipo enterprise. El modo desarrollador llena la base de datos con datos de prueba. preprod: true no afecta a Odoo directamente, sino que elige puertos alternativos como 16202 para normal y 16302 para enterprise. Finalmente, los m\u00f3dulos son los que se instalar\u00e1n en el entorno. En la lista de modules , estos deben tener el nombre exacto que se muestra en su informaci\u00f3n. La funci\u00f3n no ha sido completamente probada con m\u00f3dulos de terceros y se recomienda esperar a instalarlos manualmente (mail viene por defecto).","title":"Cosas a tener en cuenta"},{"location":"odoo/odoofy/#notas","text":"Estructura de carpetas de Odoofy: /opt/odoo16/ \u251c\u2500\u2500 addons \u251c\u2500\u2500 framework \u251c\u2500\u2500 projects \u2502 \u251c\u2500\u2500 01 \u2502 \u251c\u2500\u2500 enterprise.conf \u2502 \u251c\u2500\u2500 enterprise.log \u2502 \u251c\u2500\u2500 enterprise.service \u2502 \u251c\u2500\u2500 odoo.conf \u2502 \u251c\u2500\u2500 odoo.log \u2502 \u251c\u2500\u2500 odoo.service \u2502 \u251c\u2500\u2500 addons \u2502 \u2502 \u251c\u2500\u2500 community \u2502 \u2502 \u251c\u2500\u2500 custom \u2502 \u2502 \u251c\u2500\u2500 private \u2502 \u2502 \u2514\u2500\u2500 public \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 geoip \u2502 \u2502 \u251c\u2500\u2500 screencasts \u2502 \u2502 \u2514\u2500\u2500 screenshots \u2502 \u2514\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 enterprise \u2502 \u2514\u2500\u2500 odoo \u2514\u2500\u2500 venv Desglose de los puertos utilizados por Odoofy: 16022 16 = Versi\u00f3n de Odoo 0 = No es enterprise ni preproducci\u00f3n 22 = N\u00famero de proyecto Tabla de puertos utilizados por Odoofy: Versi\u00f3n Enterprise Preproducci\u00f3n Puertos (web - data) 16 No No 16000 - 16500 16 S\u00ed No 16100 - 16600 16 No S\u00ed 16200 - 16700 16 S\u00ed S\u00ed 16302 - 16800 .search-results { display: none; }","title":"Notas"},{"location":"odoo/server_management/","text":"Gesti\u00f3n de servidores Odoo Odoo services, setup y restarts Estando en el servidor queremos listar los servicios existentes: ls /etc/systemd/system Esto nos mostrar\u00e0 todos los serviciones disponibles en la maquina. Para ver el estado de un servicio: systemctl status <nombre del servicio> Para reiniciar un servicio: systemctl restart <nomre del servicio> Ejemplo: systemctl restart odoo17001 SSH Para connectar al servidor que hostea nuestos servicios de Odoo utilizamos ssh. Usando l\u00ednea de comandos ser\u00eda: ssh <ip> -l <usuario> Ejemplo: ssh 192.168.1.207 -l root Una herramienta muy \u00fatil es Termius . \u00c9sta nos guarda los servidores y sus credenciales para tenerlos siempre a disposici\u00f3n: .search-results { display: none; }","title":"Gesti\u00f3n de servidores Odoo"},{"location":"odoo/server_management/#gestion-de-servidores-odoo","text":"","title":"Gesti\u00f3n de servidores Odoo"},{"location":"odoo/server_management/#odoo-services-setup-y-restarts","text":"Estando en el servidor queremos listar los servicios existentes: ls /etc/systemd/system Esto nos mostrar\u00e0 todos los serviciones disponibles en la maquina. Para ver el estado de un servicio: systemctl status <nombre del servicio> Para reiniciar un servicio: systemctl restart <nomre del servicio> Ejemplo: systemctl restart odoo17001","title":"Odoo services, setup y restarts"},{"location":"odoo/server_management/#ssh","text":"Para connectar al servidor que hostea nuestos servicios de Odoo utilizamos ssh. Usando l\u00ednea de comandos ser\u00eda: ssh <ip> -l <usuario> Ejemplo: ssh 192.168.1.207 -l root Una herramienta muy \u00fatil es Termius . \u00c9sta nos guarda los servidores y sus credenciales para tenerlos siempre a disposici\u00f3n: .search-results { display: none; }","title":"SSH"}]}